[
  {
    "objectID": "quarto/movement_patterns.html",
    "href": "quarto/movement_patterns.html",
    "title": "Movement Patterns",
    "section": "",
    "text": "In this document, we will examine patterns in the movement behaviours of collared muskoxen. We will use muskox speed and turning angles to explore behaviour.",
    "crumbs": [
      "Movement Patterns"
    ]
  },
  {
    "objectID": "quarto/movement_patterns.html#movement-trends",
    "href": "quarto/movement_patterns.html#movement-trends",
    "title": "Movement Patterns",
    "section": "Movement Trends",
    "text": "Movement Trends\n\n\n\n\n\n\n\n\n\nBased on the time series above, movement tends to be highest in the summer (June, July, August), gradually decrease during autumn (September, October, November) and winter (December, January, February) and experience a sharp increase in the late spring (May). Perhaps this increase is timed with parturition, which has been found to start in April/May (Adamczewski 1997). Alternatively, this could be tied to the timing of snowmelt. We can explore this further by looking at average seasonal step lengths for each muskox:\n\n\n\n\n\n\n\n\n\nStep lengths in the winter and spring are similar, whereas autumn step lengths are intermediate between winter and summer. This again highlights the discrepancy between the gradual decrease in step lengths from summer to winter compared with the sharper increase from winter to summer.\nFor the most part, average seasonal step lengths are consistent between muskoxen, though there appear to be greater variation in the spring and autumn. To examine this further, let’s plot smoothed curves of step lengths against day of year for different years. We’ll restrict this plot to muskoxen-year combinations with more than half a year’s worth of data:\n\n\n\n\n\n\n\n\n\nThe curves of step lengths follow similar trajectories but there is still considerable variation across years and among muskoxen. This suggests weather, landscape, and muskox characteristics may play a part in influencing movement behaviour.",
    "crumbs": [
      "Movement Patterns"
    ]
  },
  {
    "objectID": "quarto/movement_patterns.html#net-squared-displacement",
    "href": "quarto/movement_patterns.html#net-squared-displacement",
    "title": "Movement Patterns",
    "section": "Net Squared Displacement",
    "text": "Net Squared Displacement\nWe can also look at net squared displacement curves to investigate movement patterns of muskoxen (i.e. resident, migratory, or nomadic). See Bunnefeld et al. (2011) for examples of how these curves look for different movement classes (i.e. migrant, disperser, resident, nomad).\nTo do this we will use the adehabitatLT package to format our data and the migrateR package to fit different models to the net displacement data. Let’s first get our collar data into the trajectory format used by adehabitatLT. We will also subset our data to one observation per day to improve modelling efficiency.\n\nmusk_collar_sub &lt;- musk_collar_filt %&gt;%\n  filter(lubridate::hour(datetime) == 16)\n\nxy &lt;- musk_collar_sub %&gt;%\n  sf::st_transform(\"+proj=utm +zone=9\") %&gt;%\n  sf::st_coordinates()\nltraj &lt;- adehabitatLT::as.ltraj(xy = xy, date = musk_collar_sub$datetime, id = musk_collar_sub$Id_Number)\n\nadehabitatLT::ld(ltraj) %&gt;%\n  filter(!(id %in% c(707,709,710))) %&gt;%\n  ggplot(aes(x = date, y = R2n)) +\n  geom_point(size = 0.5) +\n  geom_line() +\n  ylab(\"Net squared displacement (km^2)\") +\n  xlab(\"Date\") +\n  facet_wrap(~id) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\nThe plot above shows the net squared displacement from the initial location for each collared muskoxen. There does not appear to be a clear movement behaviour shared between all muskoxen. Most appear to have short periods of time during the summer with large net squared displacement, but these are generally followed by longer periods where net squared displacement is much smaller. Muskoxen 7011 and 7012 show a general increasing trend in net squared displacement, but there are still extended periods of smaller displacement throughout the time series. Most of the periods of larger displacement do not appear to be long enough to represent a separate summer range. Examinations of animations of muskox movements generally show that they tend to move between patches of resources during the summer rather than sticking to one specific area.",
    "crumbs": [
      "Movement Patterns"
    ]
  },
  {
    "objectID": "quarto/movement_patterns.html#spatial-patterns",
    "href": "quarto/movement_patterns.html#spatial-patterns",
    "title": "Movement Patterns",
    "section": "Spatial Patterns",
    "text": "Spatial Patterns"
  },
  {
    "objectID": "quarto/data_exploration.html",
    "href": "quarto/data_exploration.html",
    "title": "Data Cleaning",
    "section": "",
    "text": "Movement data for this project come from 10 female muskoxen in the Sahtu region of the Northwest Territories (NWT) that were collared between December 2007 and February 2012.\nWe can plot the date ranges of individual collared muskoxen below:\n\n\n\n\n\n\nId_Number\nDateRange\nNumDays\n\n\n\n\n706\nDec 2007 to May 2009\n515\n\n\n707\nDec 2007 to Apr 2008\n145\n\n\n708\nFeb 2009 to Dec 2010\n669\n\n\n709\nJan 2008 to Apr 2008\n98\n\n\n710\nJan 2008 to Apr 2008\n100\n\n\n7010\nFeb 2009 to Jan 2010\n345\n\n\n7011\nJan 2009 to Dec 2011\n1055\n\n\n7012\nFeb 2009 to Feb 2012\n1106\n\n\n7013\nFeb 2009 to Aug 2011\n926\n\n\n7080\nDec 2007 to Aug 2009\n607\n\n\n\n\n\n\n\n\nMuskoxen 707, 709, 710, and 7010 have less than a year of movement data and only 7011, 7012, and 7013 have more than 2 years of data.",
    "crumbs": [
      "Data Cleaning"
    ]
  },
  {
    "objectID": "quarto/data_exploration.html#sample-size",
    "href": "quarto/data_exploration.html#sample-size",
    "title": "Data Cleaning",
    "section": "",
    "text": "Movement data for this project come from 10 female muskoxen in the Sahtu region of the Northwest Territories (NWT) that were collared between December 2007 and February 2012.\nWe can plot the date ranges of individual collared muskoxen below:\n\n\n\n\n\n\nId_Number\nDateRange\nNumDays\n\n\n\n\n706\nDec 2007 to May 2009\n515\n\n\n707\nDec 2007 to Apr 2008\n145\n\n\n708\nFeb 2009 to Dec 2010\n669\n\n\n709\nJan 2008 to Apr 2008\n98\n\n\n710\nJan 2008 to Apr 2008\n100\n\n\n7010\nFeb 2009 to Jan 2010\n345\n\n\n7011\nJan 2009 to Dec 2011\n1055\n\n\n7012\nFeb 2009 to Feb 2012\n1106\n\n\n7013\nFeb 2009 to Aug 2011\n926\n\n\n7080\nDec 2007 to Aug 2009\n607\n\n\n\n\n\n\n\n\nMuskoxen 707, 709, 710, and 7010 have less than a year of movement data and only 7011, 7012, and 7013 have more than 2 years of data.",
    "crumbs": [
      "Data Cleaning"
    ]
  },
  {
    "objectID": "quarto/data_exploration.html#collar-failure",
    "href": "quarto/data_exploration.html#collar-failure",
    "title": "Data Cleaning",
    "section": "Collar Failure",
    "text": "Collar Failure\nBefore we look into the data, there are some data cleaning steps we can use to remove errors from that dataset. First, we know that collars 707, 709, and 710 had their release mechanisms triggered early, so we need to look at the data to figure out when this happened. Let’s start by looking at histograms of step lengths:\n\n\n\n\n\n\n\n\n\nThe stepped nature of the distances traveled on the left side of the graph are a result of the resolution of the GPS device. For collars 707, 709, and 710, there appear to be a greater-than-expected number of instances where the muskoxen move negligible distances. By plotting time series of step lengths, we can can see that these negligible distances occur at the end of the recording periods:\n\n\n\n\n\n\n\n\n\nFor simplicity, let’s remove all points following the first two consecutive short step lengths (i.e. 0 or 4.4747041) at the end of the time series.\n\n\n\n\n\nId_Number\nDaysRemoved\n\n\n\n\n707\n108\n\n\n709\n36\n\n\n710\n19",
    "crumbs": [
      "Data Cleaning"
    ]
  },
  {
    "objectID": "quarto/data_exploration.html#data-filtering",
    "href": "quarto/data_exploration.html#data-filtering",
    "title": "Data Cleaning",
    "section": "Data Filtering",
    "text": "Data Filtering\nNow that we have removed data that we know contain errors, we can start to look for less obvious sources of errors. The SDLfilter package has two functions, dupfilter and ddfilter, that remove data duplicates and unlikely points, respectively.\nFirst let’s use dupfilter to remove duplicate data points with the same date and time.\n\nsdl_dup &lt;- SDLfilter::dupfilter(sdl_musk, \n                                step.time = 7,\n                                conditional = TRUE)\n\n\ndupfilter_exact removed 3 of 14065 locations\ndupfilter_qi removed 0 of 14062 locations\ndupfilter_time removed 31 of 14062 locations\ndupfilter_space removed 0 of 14031 locations\n\nInput data: 14065 locations\nFiltered data: 14031 locations\ndupfilter removed 34 locations (0.24% of original data)\n\n\nNext we’ll use ddfilter to filter points based on speed and turning angles between consecutive points. To use this function, we need to estimate the maximum reasonable speed between two consecutive locations. The vmax function maps a gamma distribution to the observed speeds and estimates the maximum speed as the value with a cumulative probability of 0.999.\n\nvmax &lt;- SDLfilter::vmax(sdl_dup, prob = 0.999)\n\n\ndupfilter_exact removed 0 of 14031 locations\ndupfilter_qi removed 0 of 14031 locations\ndupfilter_time removed 0 of 14031 locations\ndupfilter_space removed 176 of 14031 locations\n\nInput data: 14031 locations\nFiltered data: 13855 locations\ndupfilter removed 176 locations (1.25% of original data)\n\n\nThe maximum linear speed (Vmax) was estimated using 13841 locations.\nVmax: 0.4891431 km/h\n\n\nWe will also estimate the maximum one-way linear speed of a loop trip. A loop trip is defined as a spatial departure and return involving a series of three or more consecutive points. The vmaxlp function also uses a gamma distribution to estimate this speed:\n\nvmaxlp &lt;- SDLfilter::vmaxlp(sdl_dup, prob = 0.999)\n\n\ndupfilter_exact removed 0 of 14031 locations\ndupfilter_qi removed 0 of 14031 locations\ndupfilter_time removed 0 of 14031 locations\ndupfilter_space removed 176 of 14031 locations\n\nInput data: 14031 locations\nFiltered data: 13855 locations\ndupfilter removed 176 locations (1.25% of original data)\n\n\nThe maximum one-way linear speed of a loop trip (vmaxlp) was estimated using \n180 Vlp from 90 loop trips.\nvmaxlp: 0.269 km/h\n\n\nNow we can filter our data using ddfilter. Locations are removed if one of following criteria are met: 1) speed from previous and to subsequent location both exceed vmax; 2) inner angle is less than a given threshold and speed from a previous or to a subsequent location exceeds vmaxlp. We will specify a turning angle of 14 degrees, as outlined in Bjørneraas et al. 2010.\n\nsdl_dd1 &lt;- SDLfilter::ddfilter(sdl_dup, qi = 5, \n                              vmax = vmax, vmaxlp = vmaxlp,\n                              ia = 14)\n\n\nddfilter_speed removed 39 of 14031 locations\nddfilter_loop removed 38 of 13992 locations\n\nInput data: 14031 locations\nFiltered data: 13954 locations\nddfilter removed 77 locations (0.55% of original data)\n\n\n\n\n\n\n\n\n\n\n\nThe filtered points appear non-randomly across the time series, which suggests that our speed thresholds were too small. Let’s increase vmax and vmaxlp to more conservative values of 2 km/h and 1 km/h, respectively.\n\nsdl_dd2 &lt;- SDLfilter::ddfilter(sdl_dup, qi = 5, \n                              vmax = 2, vmaxlp = 1,\n                              ia = 14)\n\n\nddfilter_speed removed 1 of 14031 locations\nddfilter_loop removed 1 of 14030 locations\n\nInput data: 14031 locations\nFiltered data: 14029 locations\nddfilter removed 2 locations (0.01% of original data)\n\n\n\n\n\n\n\n\n\n\n\nThat seems to do a better job of only removing the most extreme points.",
    "crumbs": [
      "Data Cleaning"
    ]
  },
  {
    "objectID": "quarto/data_exploration.html#post-deployment-bias",
    "href": "quarto/data_exploration.html#post-deployment-bias",
    "title": "Data Cleaning",
    "section": "Post-deployment Bias",
    "text": "Post-deployment Bias\nLastly, we will remove any points collected within 24 hours of collar deployments to remove the immediate effects of capture and handling.\n\n\n\n\n\nId_Number\ncollar_deployed\n\n\n\n\n708\n2009-02-07 15:00:00\n\n\n7010\n2009-02-07 14:19:00\n\n\n7013\n2009-02-07 11:55:00\n\n\n7012\n2009-02-06 12:52:00\n\n\n7011\n2009-01-28 15:02:00\n\n\n710\n2008-01-18 16:29:00\n\n\n709\n2008-01-18 14:50:00\n\n\n7080\n2007-11-14 13:21:00\n\n\n707\n2007-11-14 10:50:00\n\n\n706\n2007-11-11 13:30:00",
    "crumbs": [
      "Data Cleaning"
    ]
  },
  {
    "objectID": "quarto/home_range.html",
    "href": "quarto/home_range.html",
    "title": "Home Range",
    "section": "",
    "text": "In this document, we will estimate home range size for collared muskoxen and look to compare range overlap and size across years and seasons.",
    "crumbs": [
      "Home Range"
    ]
  },
  {
    "objectID": "quarto/home_range.html#home-range",
    "href": "quarto/home_range.html#home-range",
    "title": "Home Range",
    "section": "Home Range",
    "text": "Home Range"
  },
  {
    "objectID": "quarto/home_range.html#estimating-movement-model",
    "href": "quarto/home_range.html#estimating-movement-model",
    "title": "Home Range",
    "section": "Estimating Movement Model",
    "text": "Estimating Movement Model\nBefore we can estimate home ranges for the collared muskoxen, we need to determine an appropriate movement model. To do this, we will use variograms. Our data has been updated to conform to Movebank naming conventions so that we can use the ctmm package.\n\nlibrary(ctmm)\nmusk_move &lt;- read.csv(here(\"data/raw/muskox_data/musk_collar_filt_movebank.csv\"))\nmusk_tel &lt;- as.telemetry(musk_move)[c(-2,-4,-5)]\n\nFirst we will plot empirical variograms for each collared muskoxen. Variograms are used to quantify spatial dependence between locations at different points in time. In general, as the time between locations increases, spatial dependence decreases. Variograms plot the semi-variance of distances between pairs of points separated by different time lags. At short time lags, these distances are very similar and the semi-variance is low. At large time lags, there is greater variability in the distances between points, so the semi-variance is high. Usually variograms will reach an asymptote in semi-variance that represents the time lag at which the animal is able to traverse their home range. For now we will leave out the muskoxen that had collar failures as they do not have enough data to estimate home ranges.\n\nmusk_var &lt;- lapply(musk_tel, variogram, CI=\"Gauss\", fast = FALSE)\nxlim &lt;- c(0,5 %#% \"day\")\n\n\nmap(musk_var, function(x) x %&gt;% as_tibble() %&gt;% mutate(id = x@info$identity)) %&gt;% \n  list_rbind() %&gt;%\n  mutate(level = 0.95,\n         ci.lower = SVF*qchisq((1-level)/2,DOF,lower.tail=TRUE)/DOF,\n         ci.upper = SVF*qchisq((1-level)/2,DOF,lower.tail=FALSE)/DOF) %&gt;%\n  ggplot(aes(x = lag, y = SVF)) +\n  geom_linerange(aes(ymin = ci.lower, ymax = ci.upper), colour = \"grey\") +\n  geom_line() +\n  facet_wrap(~id, scales = \"free_y\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nMost of these look fine, however for two of the longer time series (7011 and 7012) the semi-variance appears to reach an asymptote by the first year, but starts increasing again part way through the second year. If this behaviour is common, home range estimates may be biased even after a year’s worth of data. If muskoxen truly are nomadic and lack site fidelty, kernel density methods may not be appropriate (Silva et al., 2022).\nIt is also clear there are some issues with collars 708 and 7010. Closer inspection of the data reveals that, every 7 fixes, there is a longer 24 hour delay until the next fix. Currently, the model uses the median sampling interval (8 hours) to estimate the variogram. The variogram function allows is to specify more than one time interval (in our case, 8 and 24 hours) to progressively coarsen the variogram. We can also specify an interval-weighted algorithm to further improve the appearance of the variogram.\n\ndt &lt;- c(8, 24) %#% \"hour\"\nmusk_var[[2]] &lt;- variogram(musk_tel[[2]], dt = dt, CI=\"Gauss\", fast = FALSE)\nmusk_var[[3]] &lt;- variogram(musk_tel[[3]], dt = dt, CI=\"Gauss\", fast = FALSE)\n\n\nmap(musk_var, function(x) x %&gt;% as_tibble() %&gt;% mutate(id = x@info$identity)) %&gt;% \n  list_rbind() %&gt;%\n  mutate(level = 0.95,\n         ci.lower = SVF*qchisq((1-level)/2,DOF,lower.tail=TRUE)/DOF,\n         ci.upper = SVF*qchisq((1-level)/2,DOF,lower.tail=FALSE)/DOF) %&gt;%\n  ggplot(aes(x = lag, y = SVF)) +\n  geom_linerange(aes(ymin = ci.lower, ymax = ci.upper), colour = \"grey\") +\n  geom_line() +\n  facet_wrap(~id, scales = \"free_y\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nThese look better. Collars 7011 and 7012 do not appear to reach an asymptote in semi-variance as lag increases, suggesting that these individuals are not range resident. 7010 has a somewhat bell-shaped curve. This can be indicative of distinct winter and summer grounds. However, given that muskoxen appear to have limited movement in the winter and the ~1-year time series for 7010 starts and ends in winter, it seems more likely that the wintering grounds from one year to the next happened to be close together.\nWe can diagnose these issues further by fitting a variety of custom variogram functions to our data using the ctmm.select function.\n\n### fist create a best guess set of parameters for the model\nmusk_var_mod &lt;- lapply(musk_var, variogram.fit, interactive = FALSE)\n#fit &lt;- mapply(function(x,y){ctmm.select(x,y,verbose = TRUE,cores = 3)},musk_tel,musk_var_mod)\n#saveRDS(fit, here(\"output/musk_var_fit.rds\"))\nfit &lt;- readRDS(here(\"output/musk_var_fit.rds\"))\nfor (i in 1:length(musk_var)){print(musk_var[[i]]@info$identity);print(summary(fit[,i])); plot(musk_var[[i]], CTMM = fit[,i], col.CTMM=c(\"red\",\"purple\",\"blue\", \"green\"),fraction=0.5,level=0.5);plot(musk_var[[i]], CTMM = fit[,i], col.CTMM=c(\"red\",\"purple\",\"blue\", \"green\"),xlim = xlim,,level=0.5)}\n\n[1] \"706\"\n                     ΔAICc ΔRMSPE (km)  DOF[area]\nOUF anisotropic    0.00000    2.077907   9.617055\nOUF               42.66530    1.890928   9.990823\nOU anisotropic    68.82166    2.245986   7.367132\nOUf anisotropic 1317.33573    0.000000 219.589031\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] \"708\"\n                    ΔAICc ΔRMSPE (km) DOF[area]\nOUF anisotropic    0.0000    1.244331  25.89534\nOUF              116.7679    1.350865  18.22964\nOU anisotropic   198.9542    1.852910  21.97129\nOUf anisotropic 1030.2342    0.000000 285.96732\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] \"7010\"\n                    ΔAICc ΔRMSPE (km)  DOF[area]\nOUF anisotropic   0.00000    3.760725   8.090865\nOUF              57.73839    3.915642   8.109727\nOU anisotropic  149.18384    4.605075   4.914131\nOUf anisotropic 442.22301    0.000000 113.628816\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] \"7011\"\n                    ΔAICc ΔRMSPE (km)  DOF[area]\nOUF anisotropic    0.0000    5.483670   8.988154\nOUF              352.6867    6.712407   5.586937\nOU anisotropic   468.8016    6.491142   8.365915\nOUf anisotropic 2604.0344    0.000000 336.211689\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] \"7012\"\n                    ΔAICc ΔRMSPE (km)  DOF[area]\nOUF anisotropic    0.0000    3.607974  12.453842\nOUF              136.5556    4.887839  10.391674\nOU anisotropic   296.2989    4.133481   8.086789\nOUf anisotropic 2682.6031    0.000000 368.948403\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] \"7013\"\n                    ΔAICc ΔRMSPE (km)  DOF[area]\nOUF anisotropic    0.0000    3.001076  13.847073\nOUF              108.0571    2.462135  15.168212\nOU anisotropic   350.1016    3.654844   8.005831\nOUf anisotropic 2123.5205    0.000000 359.910030\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] \"7080\"\n                    ΔAICc ΔRMSPE (km) DOF[area]\nOUF anisotropic    0.0000    2.230820  23.94430\nOUF               73.9577    2.820220  21.23700\nOU anisotropic   216.7409    2.475281  15.64506\nOUf anisotropic 1048.6776    0.000000 278.59866\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThese look okay, but they aren’t capturing the short timescales well in all instances. This could be an issue with these individuals not being range resident, but it could also be related to telemetry error. To try to rectify this, we can attempt to fit models that account for potential error in the telemetry data. Normally, we would want to explicitly include measured error, but since we don’t have those data, we can try to model it. This will partially account for instances where the muskox appeared to have moved between successive time stamps, but really didn’t or instances where the muskox appeared to move between successive time stamps, but really didn’t.\nLet’s simulate new data based on the best fitted model for collar 706.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAt large time scales, the modelled variogram does not appear to match up very well against the empirical variograms of the simulated and observed data. This is because the errors in the variograms (difference between modelled and empirical) are autocorrelated. Small perturbations are carried forward and can add up over time, but these are not necessarily a bad thing for fitting our model.\nIn addition, as the time lag increase, so to does our uncertainty about the estimated semi-variance because larger time lags have fewer pairs of data points to estimate the semi-variance. We have the most certainty at short time lags because we have many pairs of data to estimate uncertainty. It appears as though the simulated variogram is better represented by our current model",
    "crumbs": [
      "Home Range"
    ]
  },
  {
    "objectID": "quarto/resource_selection.html",
    "href": "quarto/resource_selection.html",
    "title": "Resource selection",
    "section": "",
    "text": "musk_lc &lt;- musk_collar_filt %&gt;%\n  mutate(lc = extract(lc_2010_proj, musk_collar_filt, ID = FALSE)$value,\n         Group = ifelse(month&lt;5|month&gt;10,\"Occurrence\\nWinter (Nov - Apr)\",\"Occurrence\\nSummer (May - Sep)\")) %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(Group, lc) %&gt;%\n  summarise(n = n()) %&gt;%\n  group_by(Group) %&gt;%\n  mutate(freq = n/sum(n)) \n\n`summarise()` has grouped output by 'Group'. You can override using the\n`.groups` argument.\n\nlc_props &lt;- freq(lc_2010_proj) %&gt;%\n  mutate(freq = count/sum(count),\n         lc = factor(value, levels = levels(lc_atts$Classification)),\n         Group = \"Availability\") %&gt;%\n  select(Group, lc, freq)\n\n\nmusk_lc %&gt;%\n  select(-n) %&gt;%\n  bind_rows(lc_props) %&gt;%\n  filter(lc != \"Snow and Ice\") %&gt;%\n  ggplot(aes(x = lc, y = freq, fill = lc)) +\n  geom_col() +\n  facet_wrap(~Group) +\n  ylab(\"Proportion of GPS fixes\") +\n  labs(fill = \"Landcover\") +\n  xlab(\"Landcover\") +\n  scale_fill_manual(values = cols) +\n  theme_bw() +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank())\n\n\n\n\n\n\n\n\n\n\n# A tibble: 12 × 2\n   month avg_sl\n   &lt;dbl&gt;  &lt;dbl&gt;\n 1     1 0.0968\n 2     2 0.0793\n 3     3 0.0873\n 4     4 0.0794\n 5     5 0.366 \n 6     6 0.956 \n 7     7 1.12  \n 8     8 0.852 \n 9     9 0.731 \n10    10 0.403 \n11    11 0.195 \n12    12 0.123"
  },
  {
    "objectID": "quarto/resource_selection.html#spatial-patterns",
    "href": "quarto/resource_selection.html#spatial-patterns",
    "title": "Resource selection",
    "section": "",
    "text": "musk_lc &lt;- musk_collar_filt %&gt;%\n  mutate(lc = extract(lc_2010_proj, musk_collar_filt, ID = FALSE)$value,\n         Group = ifelse(month&lt;5|month&gt;10,\"Occurrence\\nWinter (Nov - Apr)\",\"Occurrence\\nSummer (May - Sep)\")) %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(Group, lc) %&gt;%\n  summarise(n = n()) %&gt;%\n  group_by(Group) %&gt;%\n  mutate(freq = n/sum(n)) \n\n`summarise()` has grouped output by 'Group'. You can override using the\n`.groups` argument.\n\nlc_props &lt;- freq(lc_2010_proj) %&gt;%\n  mutate(freq = count/sum(count),\n         lc = factor(value, levels = levels(lc_atts$Classification)),\n         Group = \"Availability\") %&gt;%\n  select(Group, lc, freq)\n\n\nmusk_lc %&gt;%\n  select(-n) %&gt;%\n  bind_rows(lc_props) %&gt;%\n  filter(lc != \"Snow and Ice\") %&gt;%\n  ggplot(aes(x = lc, y = freq, fill = lc)) +\n  geom_col() +\n  facet_wrap(~Group) +\n  ylab(\"Proportion of GPS fixes\") +\n  labs(fill = \"Landcover\") +\n  xlab(\"Landcover\") +\n  scale_fill_manual(values = cols) +\n  theme_bw() +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank())\n\n\n\n\n\n\n\n\n\n\n# A tibble: 12 × 2\n   month avg_sl\n   &lt;dbl&gt;  &lt;dbl&gt;\n 1     1 0.0968\n 2     2 0.0793\n 3     3 0.0873\n 4     4 0.0794\n 5     5 0.366 \n 6     6 0.956 \n 7     7 1.12  \n 8     8 0.852 \n 9     9 0.731 \n10    10 0.403 \n11    11 0.195 \n12    12 0.123"
  },
  {
    "objectID": "quarto/movement_patterns.html#defining-seasons",
    "href": "quarto/movement_patterns.html#defining-seasons",
    "title": "Movement Patterns",
    "section": "Defining Seasons",
    "text": "Defining Seasons\nWe can use snow depth data from the SnowModel project to look at how snow depth impacts step lengths\n\nsnowdepth_mean %&gt;%  \n  mutate(month = month(date)) %&gt;%\n  ggplot(aes(x=date, y=snow_depth, colour = factor(month), group = 1)) + \n  geom_line(linewidth = 2) +  \n  ylab(\"Average snow depth (m)\") +  \n  xlab(\"Date\") +   \n  theme_bw() \n\n\n\n\n\n\n\n\nClearly there are large changes in snow depth across seasons. Let’s plot snow depth against step lengths to see how they match up.\n\nmusk_snow &lt;- musk_collar_filt %&gt;%\n  mutate(date = as.Date(datetime)) %&gt;%\n  left_join(snowdepth_mean)\n\nJoining with `by = join_by(date)`\n\nmusk_snow %&gt;%\n  filter(pTime == 8, !is.na(snow_depth)) %&gt;%\n  group_by(snow_depth) %&gt;%\n  summarise(mean = mean(pDist),\n            lower = quantile(pDist,0.05),\n            upper = quantile(pDist,0.95)) %&gt;%\n  ggplot(aes(x=snow_depth, y = mean)) +\n  geom_pointrange(aes(ymin=lower, ymax=upper)) +\n  ylab(\"Step length (km)\") +\n  xlab(\"Snow depth (m)\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nBased on this graph, step lengths decrease with increasing snow depth, as expected. The relationship appears to be exponential as well, with changes in step length becoming smaller as step length becomes smaller. Let’s plot our step length time series again but with colours representing 0.05 m bins of snow depth.\n\n\n`summarise()` has grouped output by 'week'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\nIt looks like once snow is deeper than ~0.1 m on average, muskox movement decreases well beyond the typical summer step lengths. Of note in the winter of 2010-2011, the snow is especially deep for an extended period of time and step lengths are at their lowest.\nTo define seasons, let’s use a cut-off of 0.1 m snow depth. We’ll define the start of winter as the first three successive days with snow depth &gt;=0.1 m and the end of winter as the first three successive days with snow depth &lt;=0.1 m.\n\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\n\n\n\n\nyear\nstart_summer\nstart_winter\nlength_summer\nlength_winter\n\n\n\n\n2007\n2007-05-22\n2007-10-11\n142\n213\n\n\n2008\n2008-05-11\n2008-10-22\n164\n209\n\n\n2009\n2009-05-19\n2009-11-06\n171\n171\n\n\n2010\n2010-04-26\n2010-10-19\n176\n215\n\n\n2011\n2011-05-22\n2011-10-19\n150\n215\n\n\n2012\n2012-05-21\n2012-11-03\n166\nNA",
    "crumbs": [
      "Movement Patterns"
    ]
  },
  {
    "objectID": "quarto/movement_patterns.html#muskox-calving",
    "href": "quarto/movement_patterns.html#muskox-calving",
    "title": "Movement Patterns",
    "section": "Muskox Calving",
    "text": "Muskox Calving\nMovement behaviour in spring may be related to calving. Previous studies in Greenland have shown that muskoxen benefit from earlier spring green-up (Eikelenboom et al., 2021), so muskoxen may be able to alter their movement behaviour depending on green-up timing. In 2008 and 2009, surveys were flown to relocate collared muskoxen to see if they were accompanied by calves. We can plot these data on graphs of step lengths in the spring to investigate how approximate calving dates impact movement.\n\n\n\n\n\n\n\n\n\nComparing the graphs of muskoxen that were observed to be accompanied by a calf to those that were not, there does not appear to be a major difference in the general trend for step lengths. 7013 in 2009 is the only trajectory to show a sudden decrease in step lengths that resembles those used to determine calving dates for caribou (Bonar et al., 2018; DeMars et al., 2013), but this signal is not present for any of the other muskoxen. For most muskoxen, there is a marked increase in step length in mid-May, but this does not appear to be related to calving dates. The survey data shows that in almost all spring surveys (April onwards), the collared muskoxen were in groups consisting of other females with calves. Only 7010 in 2009 was in a group that wasn’t observed to contain calves until the June survey. I am not sure if these observations",
    "crumbs": [
      "Movement Patterns"
    ]
  },
  {
    "objectID": "quarto/home_range.html#createing-auto-correlated-kernel-density-estimates",
    "href": "quarto/home_range.html#createing-auto-correlated-kernel-density-estimates",
    "title": "Home Range",
    "section": "Createing Auto Correlated Kernel Density Estimates",
    "text": "Createing Auto Correlated Kernel Density Estimates\nWe can use kernel density estimates that account for these underlying movement models using the akde function.\n\nbest_fit &lt;- fit[1,]\nakde &lt;- mapply(function(x,y){akde(x,y)},musk_tel,best_fit)\nEXT &lt;- lapply(akde, extent, level=0.95)\nfor(i in 1:length(akde)){plot(musk_tel[[i]],UD=akde[[i]],\n                              xlim=EXT[[i]]$x,ylim=EXT[[i]]$y);\n  title(names(musk_tel)[[i]])}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmap(akde, function(x){as_tibble(summary(x)$CI)}) %&gt;%\n  list_rbind() %&gt;%\n  set_names(c(\"lower\",\"mean\",\"upper\")) %&gt;%\n  mutate(id = factor(names(musk_tel), levels = names(musk_tel)),\n         mean = round(mean),\n         lower = round(lower),\n         upper = round(upper)) %&gt;%\n  select(id,lower,mean,upper) %&gt;%\n  ggplot(aes(x = id, y = mean)) +\n  geom_pointrange(aes(ymin = lower, ymax = upper)) +\n  ylab(\"Home range size (km2)\") +\n  xlab(\"Muskox ID\") +\n  theme_bw()\n\n\n\n\n\n\n\nmusk_move %&gt;%\n  filter(individual.local.identifier %in% names(musk_tel)) %&gt;%\n  mutate(date = as.Date(timestamp),\n         id = factor(individual.local.identifier, levels = names(musk_tel))) %&gt;%\n  group_by(id) %&gt;%\n  summarise(days = max(date) - min(date)) %&gt;%\n  ggplot(aes(x = id, y = days)) +\n  geom_point(size = 2) +\n  theme_bw()",
    "crumbs": [
      "Home Range"
    ]
  },
  {
    "objectID": "quarto/home_range.html#creating-auto-correlated-kernel-density-estimates",
    "href": "quarto/home_range.html#creating-auto-correlated-kernel-density-estimates",
    "title": "Home Range",
    "section": "Creating Auto Correlated Kernel Density Estimates",
    "text": "Creating Auto Correlated Kernel Density Estimates\nWe can use kernel density estimates that account for these underlying movement models using the akde function. We will also plot the telemetry points and colour them by day in order to understand when nomadic/dispersal events occur.\n\nbest_fit &lt;- fit[1,]\nakde &lt;- mapply(function(x,y){akde(x,y)},musk_tel,best_fit)\nEXT &lt;- lapply(akde, extent, level=0.95)\nfor(i in 1:length(akde)){plot(musk_var[[i]], fraction = 1);\n  title(names(musk_tel)[[i]]);\n  COL &lt;- color(musk_tel[[i]],by='time')\n  plot(musk_tel[[i]],UD=akde[[i]],\n       xlim=EXT[[i]]$x,ylim=EXT[[i]]$y,\n       col = COL, lwd=4)\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor the most part, the home range estimates look pretty good, but there are some concerning aspects with clusters of points that look like they represent dispersal events. 706, 7011, 7012, and 7013 all have periods of time (usually at the start or end of the time series) where they moved away from the core home range area. I’m not sure if these are concerning, but some of the odd variograms would suggest they are.\nAnother thing to consider is that for some muskoxen, there appears to be some periodicity in their movement, which affects the home rnage estimates. 708 is a good example where the semi-variance decreases at certain times leading to an underestimated variogram model. This causes the fairly conservative home range estimate.\nLastly, these models don’t account for barrier to muskox movement. 7080 in particular has a lake in its home range that it travles around. This is probably why the home range estimate is split into different sections despite the variogram suggesting a range resident individual.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThere does not appear to be a strong relationship between the days that a collar was active and the size of the home range. The muskox with the second most number of days has the highest home range estimate, but the muskox with the least amount of days has the second highest estimate.",
    "crumbs": [
      "Home Range"
    ]
  },
  {
    "objectID": "quarto/home_range.html#seasonal-ranges",
    "href": "quarto/home_range.html#seasonal-ranges",
    "title": "Home Range",
    "section": "Seasonal Ranges",
    "text": "Seasonal Ranges\n\nmusk_season &lt;- readRDS(here(\"data/processed/musk_season.rds\"))",
    "crumbs": [
      "Home Range"
    ]
  }
]